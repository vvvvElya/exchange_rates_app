import tensorflow as tf
from pathlib import Path

# –°–ø–∏—Å–æ–∫ –≤–∞–ª—é—Ç
currencies = ['CNY', 'CZK', 'GBP', 'HUF', 'PLN', 'USD']

# –ë–∞–∑–æ–≤—ã–π –ø—É—Ç—å –∫ –º–æ–¥–µ–ª—è–º
base_path = Path('rates/forecasting/trained_models')

for currency in currencies:
    h5_model_path = base_path / f'lstm_{currency}.h5'
    tflite_model_path = base_path / f'lstm_{currency}.tflite'

    print(f'–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å –¥–ª—è {currency}...')

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å
    model = tf.keras.models.load_model(h5_model_path)

    # –°–æ–∑–¥–∞—ë–º –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä
    converter = tf.lite.TFLiteConverter.from_keras_model(model)

    # –í–ê–ñ–ù–û: –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É select TF ops
    converter.target_spec.supported_ops = [
        tf.lite.OpsSet.TFLITE_BUILTINS,  # –±–∞–∑–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ tflite
        tf.lite.OpsSet.SELECT_TF_OPS    # —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ TensorFlow
    ]

    # –í–ê–ñ–ù–û: –æ—Ç–∫–ª—é—á–∞–µ–º —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ —É–ø—Ä–æ—â–µ–Ω–∏–µ tensor list ops
    converter._experimental_lower_tensor_list_ops = False

    # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –º–æ–¥–µ–ª–∏
    converter.optimizations = [tf.lite.Optimize.DEFAULT]

    # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –º–æ–¥–µ–ª–∏
    tflite_model = converter.convert()

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    tflite_model_path.write_bytes(tflite_model)

    print(f'‚úÖ –ú–æ–¥–µ–ª—å {currency} —É—Å–ø–µ—à–Ω–æ —Å–∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞ –≤ {tflite_model_path}')

print("üéâ –í—Å–µ –º–æ–¥–µ–ª–∏ —É—Å–ø–µ—à–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ TensorFlow Lite!")
